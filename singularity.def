Bootstrap: docker
From: continuumio/miniconda3 
Stage: build

%files
environment.yml .
%labels
MyLabel n-spectr
authors="andrea.talenti@ed.ac.uk" 
description="Docker image containing base requirements for nf-LO pipelines"
%post


# Install the package as normal:
conda env create -f environment.yml

# Install conda-pack:
conda install -c conda-forge conda-pack

# Use conda-pack to create a standalone enviornment
# in /venv:
conda-pack -n nf-LO -o /tmp/env.tar && \
mkdir /venv && cd /venv && tar xf /tmp/env.tar && \
rm /tmp/env.tar

# We've put venv in same path it'll be in final image,
# so now fix up paths:
/venv/bin/conda-unpack


# The runtime-stage image; we can use Debian as the
# base image since the Conda env also includes Python
# for us.


Bootstrap: docker
From: debian:buster 
Stage: runtime

%files from build
/venv /venv
%post

# Install procps in debian to make it compatible with reporting
apt-get update && apt install -y procps g++ curl && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
curl -o datasets 'https://ftp.ncbi.nlm.nih.gov/pub/datasets/command-line/LATEST/linux-amd64/datasets' && \
mv datasets /usr/local/bin && \
chmod a+x /usr/local/bin/datasets

# Copy /venv from the previous stage:

# When image is run, run the code with the environment
# activated:
PATH=/venv/bin/:$PATH
SHELL ["/bin/bash", "-c"]
%environment
export PATH=/venv/bin/:$PATH
%runscript
exec /bin/bash "$@"
%startscript
exec /bin/bash "$@"

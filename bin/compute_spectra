#!/usr/bin/env python
import sys
import numpy as np

def revert_mutation(mutation):
    table = { "A": "T",
            "T":"A",
            "G":"C",
            "C":"G"
            }
    initial, final = mutation.split('>')
    initial = ''.join([ table.get(i, i) for i in initial[::-1] ])
    final =   ''.join([ table.get(i, i) for i in final[::-1] ])
    return "{}>{}".format(initial, final)

def import_mutcat(mutcat, nsamples):
    #return { "{0}{2}{1}>{0}{3}{1}".format( line[0], line[2], line[4], line[6] ): np.zeros(nsamples, dtype = 'int64') for n, line in enumerate(open(mutcat)) if n > 0 }
    return { line.strip(): np.zeros(nsamples, dtype = 'int64') for n, line in enumerate(open(mutcat)) if n > 0 and line.strip() != '' }

if '.gz' in sys.argv[1]:
    import gzip
    infile = gzip.open(sys.argv[1])
elif '-' in sys.argv[1]:
    infile = sys.stdin
else:
    infile = open(sys.argv[1]) 

for n, line in enumerate(infile):
    try: line = line.decode()
    except: line = line
    if '##' in line: continue
    elif '#' in line:
        samples = line.strip().split()[9:]
        dataset = import_mutcat( sys.argv[2], len(samples) )
        #print(dataset)
        print('\t'.join(['mutation'] + samples))
        continue
    line = line.strip().split()
    mutype = [i.replace('mutation_type=', '') for i in line[7].split(';') if 'mutation_type=' in i][0]
    vals = np.array([ 1 if '1' in i else 0 for i in line[9:] ])
    dataset[ mutype ] += vals
    if n%1000000 == 0: sys.stderr.write( "Last position: {}:{}\n".format(line[0], line[1]) )

for key, val in dataset.items():
    outline = [key] + list( map( str, val ) )
    print( '\t'.join(outline) )

sys.stderr.write( "All done\n" )
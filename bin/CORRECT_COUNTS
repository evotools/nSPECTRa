#!/usr/bin/env python
import sys

def get_base_counts(infile):
    values = {}
    for line in open(infile):
        kmer, cnt = line.strip().split()
        values[kmer] = float(cnt)
    return values

def correct_values(values, ktgts, kcounts, mode):
    total = sum(map(int, values))
    corrected = [ float(values[n]) / kcounts.get(k, 0) if mode == 1 else float(values[n]) / float(total) / kcounts.get(k, 0) for n, k in enumerate(ktgts) ]
    return corrected

def main():
    kcounts = get_base_counts( sys.argv[2] )
    for n, line in enumerate(open(sys.argv[1])):
        if n == 0:
            kstats = [ kmer.split('>')[0] for m, kmer in enumerate(line.strip().split(';')) if m > 0 ]
            print( line.strip() )
            continue
        line = line.strip().split(';')
        outline = map(str, [line[0]] + correct_values( line[1:], kstats, kcounts, int(sys.argv[3]) ))
        print(';'.join(outline))        

if __name__ == "__main__": 
    main()
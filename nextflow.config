/*
 * ------------------------------------------------------
 *  Based on the nf-core/rnaseq Nextflow base config file
 * ------------------------------------------------------
 */

// Include parameters from configuration file
includeConfig "$projectDir/conf/params.config"

try {
  includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
  System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
  standard {
    includeConfig "$projectDir/conf/base.config"
    process.executor = 'local'
    process.conda = "$projectDir/envs/environment.yml" 
    conda.createTimeout = '6 h'
  }
  local {
    includeConfig "$projectDir/conf/base.config"
    process.executor = 'local'
  }
  stub {
    includeConfig "$projectDir/conf/stub.config"
    process.executor = 'local'
  }
  eddie {
    includeConfig "$projectDir/conf/eddie.config"
    singularity.enabled = true
    singularity.autoMounts = true 
    singularity.cacheDir = "./.singularity"
    env {
      JOBLIB_TEMP_FOLDER="${PWD}"
    }
  }
  eddie_conda {
    includeConfig "$projectDir/conf/eddie_conda.config"
    process.conda = "$projectDir/envs/environment.yml" 
    conda.createTimeout = '8 h'
    conda.useMamba = params.mamba ? true : false
    conda.enabled          = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  conda {
    process.conda = "$projectDir/envs/environment.yml" 
    conda.enabled          = true
    params.enable_conda    = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
    conda.createTimeout = '8 h'
    conda.useMamba = params.mamba ? true : false
  }
  docker {
    docker.runOptions = '-u \$(id -u):\$(id -g)'
    docker.enabled         = true
    docker.userEmulation   = true
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  singularity {
    singularity.enabled    = true
    singularity.autoMounts = true
    docker.enabled         = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  podman {
    podman.enabled         = true
    docker.enabled         = false
    singularity.enabled    = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  shifter {
    shifter.enabled        = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    charliecloud.enabled   = false
  }
  charliecloud {
    charliecloud.enabled   = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
  }
  uge {
    process.executor = 'sge'
  }   
  sge {
    process.executor = 'sge'
  }
  slurm {
    process.executor = 'slurm'
  }
  custom_profile {
    includeConfig "${params.my_config}"
  }
  test {
    includeConfig 'conf/test.config'
  }
}

// Add reporting configuration
timeline {
  enabled = true
  overwrite = true
  file = "${params.outdir}/reports/execution_timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.outdir}/reports/execution_report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.outdir}/reports/execution_trace.txt"
}
dag {
  enabled = true
  overwrite = true
  file = "${params.outdir}/reports/pipeline_dag.svg"
}


manifest {
  name            = 'evotools/nSPECTRa'
  author          = 'Andrea Talenti'
  homePage        = 'https://github.com/evotools/nSPECTRa'
  description     = 'Nextflow mutation spectra analysis workflow.'
  mainScript      = 'main.nf'
  nextflowVersion = '>=21.04.0'
  version         = '1.1.0'
}